name: E2E Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    defaults:
      run:
        working-directory: e2e-test
    steps:
    - uses: actions/checkout@v3
    - name: start application
      run: |
        cd ../
        chmod -R 777 client/
        docker compose up -d
        docker compose exec client yarn
        docker compose exec client yarn build
        docker compose exec client yarn hosting &
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - name: Install dependencies
      run: npm install -g yarn && yarn
    - name: Install Playwright Browsers
      run: yarn playwright install --with-deps
    - name: Run Playwright tests
      run: yarn playwright test
    - name: upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenshot
        path: e2e-test/playwright-report
        retention-days: 30
        if-no-files-found: error
    - name: Upload screenshot
      id: upload-s3
      run: |
        aws s3 cp ./tmp/chromium.png s3://${{ vars.AWS_S3_BUCKET }}/${{ github.event.number }}/ --endpoint-url ${{ vars.AWS_S3_ENDPOINT_URL }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: auto
    - name: Set up bot comment
      id: bot_comment
      run: |
        lf='\n'
        message="E2E test has finished :tada:"
        message+="${lf}${lf}Here is the screenshot image:"
        message+="${lf}${lf}![](${{ vars.AWS_S3_WEB_HOST_URL }}/${{ github.event.number }}/chromium.png)"
        echo "message=${message}" >> $GITHUB_OUTPUT
    - name: Comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const params = {
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
            body: '${{ steps.bot_comment.outputs.message }}',
          }
          await github.rest.issues.createComment(params)
